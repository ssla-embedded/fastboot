setenv distro_bootpart 1

setexpr rval *0x30370068 \& 0x180
if itest.s "x$rval" -eq "x100"; then
	echo "Starting fastboot..."
	fastboot 0
else
	if itest.s "x$rval" -eq "x80"; then
		setenv distro_bootpart 2;
	fi
fi
mw.l 0x30370068 0 1

setenv bootargs ''

m4=''
if itest.s "x1" == "x$m4enabled" ; then
	run m4boot;
	m4='-m4';
fi

a_base=0x40000000

setexpr a_script  ${a_base} + 0x00800000
setexpr a_Image   ${a_base} + 0x00800000
setexpr a_fdt     ${a_base} + 0x03000000
setexpr a_ramdisk ${a_base} + 0x03800000

if itest.s "x" == "x${board}" ; then
	echo "!!!! Error: Your u-boot is outdated. Please upgrade.";
	exit;
fi

if itest.s "x" == "x${fdt_file}" ; then
	fdt_file=${soc}-${board}.dtb;
fi

if load ${devtype} ${devnum}:${distro_bootpart} ${a_script} uEnv.txt ; then
    env import -t ${a_script} ${filesize}
fi

if load ${devtype} ${devnum}:${distro_bootpart} ${a_fdt} ${prefix}${fdt_file} ; then
	fdt addr ${a_fdt}
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading ${prefix}${fdt_file}";
	exit;
fi

fdt resize

if itest.s "x" != "x${cmd_custom}" ; then
	run cmd_custom
fi

# ------------------- Displays detection
if itest.s "x" != "x${cmd_hdmi}" ; then
	run cmd_hdmi
fi
if itest.s "x" != "x${cmd_mipi}" ; then
	run cmd_mipi
	if itest.s "x" != "x${fb_mipi_name}" ; then
		tile_support=disable ;
	fi
fi

setenv bootargs $bootargs console=${console},115200 vmalloc=128M consoleblank=0 rootwait
setenv bootargs $bootargs androidboot.hardware=freescale androidboot.soc=${soc}
setenv bootargs $bootargs firmware_class.path=/vendor/firmware
setenv bootargs $bootargs androidboot.keystore=software
setenv bootargs $bootargs androidboot.primary_display=imx-drm

if itest.s "xmmc" == "x$devtype" ; then
	if itest.s "x0" == "x$devnum" ; then
		bootdev=30b40000.usdhc
		setenv bootargs $bootargs androidboot.storage_type=emmc
	elif itest.s "x1" == "x$devnum" ; then
		bootdev=30b50000.usdhc
		setenv bootargs $bootargs androidboot.storage_type=sd
	fi
elif itest.s "xusb" == "x$devtype" ; then
	bootdev=32e40000.usb/ci_hdrc.1
fi
setenv bootargs $bootargs androidboot.bootdevice=$bootdev

if itest.s "x" != "x$selinux" ; then
	setenv bootargs $bootargs androidboot.selinux=$selinux
else
	setenv bootargs $bootargs androidboot.selinux=permissive
fi

if itest.s "x" != "x${tile_support}" ; then
	setenv bootargs $bootargs androidboot.fbTileSupport=${tile_support}
else
	setenv bootargs $bootargs androidboot.fbTileSupport=enable
fi

if itest.s "x" != "x${serial#}" ; then
	setenv bootargs $bootargs androidboot.serialno="${serial#}"
fi

if itest.s "x" != "x$hwrotation" ; then
	setenv bootargs $bootargs androidboot.hwrotation=$hwrotation
fi

if itest.s "x" != "x$disable_giga" ; then
        setenv bootargs $bootargs fec.disable_giga=1
fi

if itest.s "x" != "x$wlmac" ; then
	setenv bootargs $bootargs wlcore.mac=$wlmac
	# create a bt mac address from the wlan one
	setexpr btmac sub "(..:..:..:).(.*)" "\\1b\\2" ${wlmac}
	setenv bootargs $bootargs androidboot.btmacaddr=${btmac}
fi

if itest.s "x" == "x$cma" ; then
	cma=736M
fi
setenv bootargs $bootargs cma=$cma

if itest.s "x" != "x$show_fdt" ; then
	fdt print /
fi

if itest.s "x" != "x$show_env" ; then
	printenv
fi

if ${fs}load ${devtype} ${devnum}:${distro_bootpart} ${a_Image} Image ; then
	if ${fs}load ${devtype} ${devnum}:${distro_bootpart} ${a_ramdisk} uramdisk.img ; then
		booti ${a_Image} ${a_ramdisk} ${a_fdt} ;
	fi
fi

echo "Error loading the OS"
